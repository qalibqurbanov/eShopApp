@model ProductViewModel

<div class="row">
    <div class="col-md-12 text-center">
        <h1 class="text-info">Create Product</h1>
    </div>

    <hr />

    <div class="col-md-12">
        <form asp-controller="Admin" asp-action="CreateProduct" method="post" enctype="multipart/form-data">
            @*<div>
                <div asp-validation-summary="All" class="text-danger"></div>
            </div>*@

            <div class="form-group row mb-2">
                <label class="col-sm-2 col-form-label" asp-for="ProductName"></label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="ProductName">
                    <span asp-validation-for="ProductName" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row mb-2">
                <label class="col-sm-2 col-form-label" asp-for="ProductDescription"></label>
                <div class="col-sm-10">
                    <textarea id="descriptionTextarea" class="form-control" asp-for="ProductDescription"></textarea>
                    <span asp-validation-for="ProductDescription" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row mb-2">
                <label class="col-sm-2 col-form-label" asp-for="ProductPrice"></label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" asp-for="ProductPrice">
                    <span asp-validation-for="ProductPrice" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row mb-2">
                <label class="col-sm-2 col-form-label">Categories:</label>
                <div class="col-sm-10">
                    @if(((List<Category>)ViewData["Categories"]) != null)
                    {
                        @foreach (Category category in (List<Category>)ViewData["Categories"])
                        {
                            /* Burada DB-da olan butun kateqoriyalara qarwiliq bir 'Switch' kontrolu yaradiriq. */

                            <div class="form-check form-switch">
                                @* Checkboxun ozu: *@
                                @* Yaradacagim (hemin bu kateqoriyalari temsil eden) input-un 'value'-sunu servere gonderecem, gondereceyim hemin 'value'-nu action-da hemin inputun 'name'-i vasitesile yaxalayacam. *@
                                @* Lakin, burada foreach dovru var, alt-alta kateqoriya sayi qeder 'Switch' kontrolu yaratmiw olacayiq - bu ise o demekdir ki actiona tek bir '@category.CategoryID' gelmeyecek, actiona bir nece(daha once dediyim kimi kateqoriya sayi qeder) '@category.CategoryID' gelecek ve ustelik hemin bu yaranacaq olan 'Switch' kontrollarinin 'name'-leride eyni olacagina gore Actionda hemin bu yaxalanacaq olan '@category.CategoryID'-leri 'int[]' olaraq yaxalamaliyam (ki servere gelmiw olan butun '@category.CategoryID'-leri yaxalayim, 'int' ile qarwilasam tek bir dene '@category.CategoryID'-ni yaxalamiw olacam, oda boyuk ehtimal son 'Switch' kontrolunun 'value'-su olacaq idi) *@
                                <input class="form-check-input"
                                       type="checkbox"
                                       name="catIDs"
                                       value="@category.CategoryID">

                                @* Checkboxun yazisi: *@
                                <label class="form-check-label" for="category_@category.CategoryID">@category.CategoryName</label>
                            </div>
                        }
                    }
                </div>
            </div>

            <div class="form-group row mb-2">
                <label class="col-sm-2 col-form-label" asp-for="ProductIsApproved"></label>
                <div class="col-sm-10">
                    <div class="form-check form-switch">
                        <input class="form-check-input" asp-for="ProductIsApproved" type="checkbox" id="isApproved">
                        <label class="form-check-label" asp-for="ProductIsApproved">
                            <span id="isApprovedText">No</span>
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group row mb-2">
                <label class="col-sm-2 col-form-label" asp-for="ProductIsHome"></label>
                <div class="col-sm-10">
                    <div class="form-check form-switch">
                        <input class="form-check-input" asp-for="ProductIsHome" type="checkbox" id="isHome">
                        <label class="form-check-label" asp-for="ProductIsHome">
                            <span id="isHomeText">No</span>
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group row mb-2">
                <label class="col-sm-2 col-form-label" asp-for="ProductImageName"></label>
                <div class="col-sm-10">
                    <input type="hidden" asp-for="ProductImageName">

                    <div class="d-block mb-2">
                        @* Actionda 'IFormFile' komeyile burdan gelen fayli yaxalayacayiq. Diqqet etmek lazimdir ki actionda parametr bu 'name'-de olsun: 'IFormFile imageFile' :ki Model Binding dogru iwlesin: *@
                        <input type="file" name="imageFile" />
                        <span asp-validation-for="ProductImageName" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <div class="col-sm-10 offset-sm-2 d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary">Create Product</button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    const switchIsHome = document.getElementById("isHome");
    const switchIsHomeText = document.getElementById("isHomeText");

    const switchIsApproved = document.getElementById("isApproved");
    const switchIsApprovedText = document.getElementById("isApprovedText");

    $(switchIsHome).click(function ()
    {
        var isHomeChecked = $(switchIsHome).is(':checked');
        $(switchIsHomeText).text(isHomeChecked ? 'Yes' : 'No');
    });

    $(switchIsApproved).click(function ()
    {
        var isApprovedChecked = $(switchIsApproved).is(':checked');
        $(switchIsApprovedText).text(isApprovedChecked ? 'Yes' : 'No');
    });
</script>

@section Scripts
{
    <script src="~/ckeditor5-classic/ckeditor.js"></script>
    <script>
        $(document).ready(function ()
        {
            ClassicEditor
                .create(document.querySelector('#descriptionTextarea'), { removePlugins: [ 'CKFinderUploadAdapter', 'CKFinder', 'EasyImage', 'Image', 'ImageCaption', 'ImageStyle', 'ImageToolbar', 'ImageUpload', 'MediaEmbed', 'Table' ]})
                .catch(error =>
                {
                    console.error(error);
                });
        });
    </script>

    @* .NET Core modele verilmiw Data Annotation atributlari sayesinde modelin aid oldugu uygun inputlara "data-..." atributunu verir. Geriye qalir JQuery-nin validasiya kitabxanasini lazimi sehifelere ve ya birbawa yalniz '_Layout'-a(layouta elave edilsin validasiya lazim oldu-olmadi butun sehifelere bu kitabxanalar elave edilecek, bu ise bize lazim deyil) elave ederek xetalari usere client/brauzer terefde dinamik bir wekilde (JQuery-nin awagidaki 2 validasiya kitabxanasi sayesinde) avtomatik olaraq gostermek: *@
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    @* JQuery-nin bu iki validasiya kitabxanasini elave etmemiwden qabaq mutleq 'jquery.js' import olunmalidir, cunki yuxaridaki hemin bu 2 validasiya kitabxanasinin iwleye bilmesi ucun 'jquery.js'-e ehtiyaci var *@
}